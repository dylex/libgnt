# vi:et:ts=2 sw=2 sts=2
environment:
  - GNT_VERSION=latest
  - DOCS_REPOSITORY=libgnt/docs
  - REGISTRY_HOST=docker.io
  - REPOSITORY=libgnt/builders

tasks:
  import:
    type: docker/import
    files: .:.

  login:
    type: docker/login
    username: ${DOCKERHUB_USERNAME}
    password: ${DOCKERHUB_PASSWORD}
    server: docker.io
  logout:
    type: docker/logout
    server: docker.io

  clean:
    type: convey/clean
    files:
      - build-convey
      - pvs-studio

  build-docs:
    type: docker/run
    image: ${REGISTRY_HOST}/${REPOSITORY}:debian-buster-amd64
    script:
      - set -ex
      - cd ${CONVEY_WORKSPACE}
      - meson build-convey
      - ninja -C build-convey libgnt-doc
  build-docs-image:
    type: docker/build
    dockerfile: doc/Dockerfile
    tag: ${REGISTRY_HOST}/${DOCS_REPOSITORY}:${GNT_VERSION}
    files:
      - build-convey/doc/html:.
  publish-docs-image:
    type: docker/push
    image: ${REGISTRY_HOST}/${DOCS_REPOSITORY}:${GNT_VERSION}

  build-target:
    type: docker/run
    image: ${REGISTRY_HOST}/${REPOSITORY}:${TARGET}

  export-target:
    type: docker/export
    files: ${TARGET}

plans:
  docs:
    stages:
      - tasks:
          - import
          - build-docs
          - build-docs-image
  ci-docs:
    stages:
      - name: prep
        tasks:
          - login
      - name: build
        tasks:
          - import
          - build-docs
          - build-docs-image
          - publish-docs-image
      - name: final
        run: always
        tasks:
          - logout

  clean:
    stages:
      - tasks: clean

  pvs-studio:
    environment: [TARGET=pvs-studio, PVS_STUDIO_KEY, PVS_STUDIO_USERNAME]
    stages:
      - tasks: [import, build-target]
      - tasks: [export-target]
        run: always

